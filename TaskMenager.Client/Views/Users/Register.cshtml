@model UserRegisterViewModel

@{
    ViewData["Title"] = "Създаване на потребител";
}
<form method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.Id)
    <div class="PrimeBox2" style="margin-top:20px; max-width:80%;">
        <div class="form-group row" style="background-color: #69a0f1; display: flex; justify-content: center;  align-items: center;" id="container">
            <h5 style="color:white; margin-left:15px;">Създаване на потребител:  @this.User.Identities.FirstOrDefault().Name.ToLower()</h5>
            <button type="button" id="x" onclick="window.location.href='@Url.Action("Index", "Home")';">
                X
            </button>
        </div>
        <div class="row" style="display: flex; justify-content: center;  align-items: center;">
            @*<label class="form-control" style="border:none; margin-bottom:5px !important;">@(!Model.isActive ? "Акаунта не е активиран от администратор" : "")</label>*@
            @if (!Model.isActive)
            {
                <label style="border:none; margin-bottom:5px !important; color:red;">Акаунта не е активиран от администратор</label>
            }
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, new { @class = "col-form-label strong" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.FullName, new { @class = "form-control", placeholder = "Въведете трите си имена", id = "userNameId", name = "userName" })
                    </div>
                    @Html.LabelFor(model => model.Email, new { @class = "col-form-label strong" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", id = "emailId", name = "email" })
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    @Html.LabelFor(model => model.TelephoneNumber, new { @class = "col-form-label strong" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.TelephoneNumber, new { @class = "form-control", placeholder = "xxxx", id = "telNumberId", name = "telNumber" })
                        <span asp-validation-for="TelephoneNumber" class="text-danger"></span>
                    </div>
                    @Html.LabelFor(model => model.MobileNumber, new { @class = "col-form-label strong" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.MobileNumber, new { @class = "form-control", placeholder = "0xxx xxxxxx", id = "mobNumberId", name = "mobNumber" })
                        <span asp-validation-for="MobileNumber" class="text-danger"></span>
                    </div>

                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @*<div class="col-md-7"></div>*@
                    @Html.LabelFor(model => model.JobTitles, new { @class = "col-form-label strong" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.JobTitleId, new SelectList(Model.JobTitles, "Value", "Text"), new { @class = "form-control", id = "jobTitleId", name = "jobTitles" })
                    </div>
                    @Html.LabelFor(model => model.Directorates, new { @class = "col-form-label strong" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.DirectorateId, new SelectList(Model.Directorates, "Value", "Text"), new { @class = "form-control", id = "directorateId", name = "directorates", onchange = "LoadDepartments(event)" })
                    </div>
                    @Html.LabelFor(model => model.Departments, new { @class = "col-form-label strong" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.DepartmentId, new SelectList(Model.Departments, "Value", "Text"), new { @class = "form-control", id = "departmentId", name = "departments", @disabled = "disabled", onchange = "LoadSectors(event)" })
                    </div>
                    @Html.LabelFor(model => model.Sectors, new { @class = "col-form-label strong" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.SectorId, new SelectList(Model.Sectors, "Value", "Text"), new { @class = "form-control", id = "sectorId", name = "sectors", @disabled = "disabled" })
                    </div>
                    <div hidden>
                        @Html.LabelFor(model => model.DaeuAccaunt, new { @class = "col-form-label strong" })
                            <div class="col-md-3">
                                <label class="form-control" style="border:none; margin-bottom:0px !important;" id = "daeuaccauntId">@Model.DaeuAccaunt</label>
                            </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row" style="
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top:10px;">
        <button type="button" class="button save" id="send">Запис</button>
        <a href="https://staging.egov.bg/wps/portal/egov/home" type="button" class="button btncansel">Изход</a>
    </div>
    <input type="submit" class="btn button-invisible" value="REALSENDSEND" id="realsend" />
</form>
<script type="text/javascript">
    function LoadDepartments(event) {
        $.getJSON('\GetDepartments\?direktorateId=' + event.target.value, { get_param: 'value' }, function (data) {
            if ($('#departmentId :selected').text() === 'Моля изберете...') {
                $('#departmentId').children('option:not(:first)').remove();
            }
            else {
                $('#departmentId').children('option').remove();
                $('#departmentId')
                    .append($("<option></option>")
                        .attr("value", "0")
                        .text('Моля изберете...'));
            }
            $.each(data, function (key, value) {
                $('#departmentId')
                    .append($("<option></option>")
                        .attr("value", value.id)
                        .text(value.textValue));
            });
            if (data.length <= 0) {
                $("#departmentId").attr('disabled', 'disabled');
                //$("#sectorId").attr('disabled', 'disabled');
            }
            else {
                $("#departmentId").removeAttr('disabled');
                //$("#sectorId").removeAttr('disabled');
            }

            $('#sectorId').children('option').remove();
            $('#sectorId')
                .append($("<option></option>")
                    .attr("value", "0")
                    .text('Моля изберете...'));
            $("#sectorId").attr('disabled', 'disabled');
        });
    }
    function LoadSectors(event) {
        $.getJSON('\GetSectors\?departmentId=' + event.target.value, { get_param: 'value' }, function (data) {
            if ($('#sectorId :selected').text() === 'Моля изберете...') {
                $('#sectorId').children('option:not(:first)').remove();
            }
            else {
                $('#sectorId').children('option').remove();
                $('#sectorId')
                    .append($("<option></option>")
                        .attr("value", "0")
                        .text('Моля изберете...'));
            }
            $.each(data, function (key, value) {
                $('#sectorId')
                    .append($("<option></option>")
                        .attr("value", value.id)
                        .text(value.textValue));
            });
            if (data.length <= 0) {
                $("#sectorId").attr('disabled', 'disabled');
            }
            else {
                $("#sectorId").removeAttr('disabled');
            }
        });
    }
</script>
@section Scripts{
    <script src="~/js/createNewUser.js" charset="utf-8"></script>
    <script>
        $(document).ready(function () {
            if ($('#directorateId :selected').text() != 'Моля изберете...') {
                $("#departmentId").removeAttr('disabled');
            }
            if ($('#departmentId :selected').text() != 'Моля изберете...') {
                $("#sectorId").removeAttr('disabled');
            }

        });
    </script>

    @await Html.PartialAsync("_ValidationScriptsPartial")
}
