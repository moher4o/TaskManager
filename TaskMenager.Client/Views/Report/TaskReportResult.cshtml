@model PeriodViewModel

@{
    ViewData["Title"] = "Отчет по задача";
}

@{ var employeesList = new List<int>();}
@{ var dateList = new HashSet<DateTime>();}
@{ int hours = 1;}
@{ int sum = 0;}
@{ string tasksNames = string.Empty;}
@{ int employeeCount = 0;}
@{ DateTime currentDate = DateTime.Now.AddDays(100);}
<div class="PrimeBox2 widthmobile" style="max-width:100%; position:relative; background-color:ghostwhite; margin-top:10px !important">
    <div class="form-group row" style="background-color: #69a0f1; display: flex; justify-content: center;  align-items: center;" id="container">
        <h5 style="color:white; margin-left:15px;">Периодичен отчет на задача "@(Model.TaskName)"</h5>
    </div>
    <div id="chartdiv"></div>
    <div>
        <table class="table table-striped table-bordered compact" style="width:100%">
            <thead style="display:table; width:100%; table-layout:fixed;">
                <tr>
                    <th style="width:7%;">Дата</th>
                    @foreach (var item in Model.DateList)
                    {
                        if (!employeesList.Contains(item.EmployeeId))      //&& employeeCount < 41
                        {
                            employeesList.Add(item.EmployeeId);
                            <th class="employee" style="min-width:30px; max-height:200px; writing-mode: vertical-rl; font-size:smaller; text-align:center;">@item.EmployeeName</th>
                            employeeCount += 1;
                        }

                        if (!dateList.Contains(item.WorkDate.Date))
                        {
                            dateList.Add(item.WorkDate.Date);
                        }
                    }
                    <th style="width:5%;">Общо:</th>
                </tr>
            </thead>
            <tbody style="display: block;">

                @foreach (var worckedDate in dateList)
                {
                    sum = 0;
                    <tr style=" display: table; width: 100%; table-layout: fixed; /* even columns width , fix width of table too*/ ">
                        <td style="width:7%;">@worckedDate.Date.ToString("dd/MM/yyyy")</td>
                        @foreach (var id in employeesList)
                        {
                            //hours = Model.DateList.Where(wh => wh.EmployeeId == id && wh.WorkDate.Date == worckedDate.Date).Select(wh => wh.HoursSpend).FirstOrDefault();
                            hours = Model.DateList.Where(wh => wh.EmployeeId == id && wh.WorkDate.Date == worckedDate.Date).Sum(wh => wh.HoursSpend);
                            tasksNames = string.Empty;
                            Model.DateList.Where(wh => wh.EmployeeId == id && wh.WorkDate.Date == worckedDate.Date).Select(wh => wh.TaskName).ToList().ForEach(tn => tasksNames += tn.Replace(" ", "_") + Environment.NewLine);
                            sum = sum + hours;
                            if (hours > 0)
                            {
                                <td style="text-align:center;" class="tooltip-big-text" data-balloon-length="xxlarge" aria-label=@tasksNames data-balloon-pos="up">@(hours > 0 ? hours.ToString() : "")</td>
                            }
                            else
                            {
                                <td></td>
                            }
                        }
                        <td style="background-color:ivory; font-size:medium; width:5%; text-align:center;"><strong>@sum</strong></td>
                    </tr>
                }
                <tr style="background-color:ivory; font-size:medium; display: table; width: 100%; table-layout: fixed;">
                    <td style="width:7%;">Общо:</td>
                    @{sum = 0; }
                    @foreach (var id in employeesList)
                    {
                        hours = Model.DateList.Where(wh => wh.EmployeeId == id).Sum(wh => wh.HoursSpend);
                        <td class="hours" style="text-align:center;"><strong>@hours</strong></td>
                        sum += hours;
                    }
                    <td style="width:5%; text-align:center;"><strong>@sum</strong></td>
                </tr>
            </tbody>
        </table>
        @if (employeeCount > 40)
        {
            <p style="color:red;">Внимание! Работилите по задачата експерти са повече от 40 и е възможно да има проблем с изобразяването на данните. За точна справка  -  изтеглете екселския файл !</p>
        }
        <form method="get" asp-action="ExportSpravkaForTask" asp-controller="Report">
            <input asp-for="taskId" class="form-control" nopicker="true" hidden />
            <input asp-for="StartDate" class="form-control" nopicker="true" hidden />
            <input asp-for="EndDate" class="form-control" nopicker="true" hidden />
            <div style="display: flex; justify-content: center;  align-items: center;">
                <input type="submit" class="btn button save" value="Експорт в Ексел" id="realsend" />
                <a class="button btncansel" style="margin-left:15px;" asp-action="TasksList" asp-controller="Tasks">
                    Списък задачи
                </a>
            </div>
        </form>
    </div>
</div>
<script src="~/js/core.js"></script>
<script src="~/js/charts.js"></script>
<script src="~/js/animated.js"></script>
<script type="text/javascript">
    function GetData() {
        let pieData = [];
        let elements = $(".employee").toArray();
        let hoursSum = $(".hours").toArray();
        for (var i = 0; i < elements.length; i++) {
            var current = elements[i];
            if (current.children.length === 0 && current.textContent.replace(/ |\n/g, '') !== '') {
                // Check the element has no children && that it is not empty
                var person = { name: current.textContent, hours: hoursSum[i].textContent };
                pieData.push(person);
            }
        }
        return pieData;
    }

    am4core.ready(function () {

        // Themes begin
        am4core.useTheme(am4themes_animated);

        // Themes end

        // Create chart instance
        var chart = am4core.create("chartdiv", am4charts.PieChart);

        // Add data
        chart.data = GetData();


        // Add and configure Series
        var pieSeries = chart.series.push(new am4charts.PieSeries());
        pieSeries.dataFields.value = "hours";
        pieSeries.dataFields.category = "name";
        pieSeries.slices.template.stroke = am4core.color("#fff");
        pieSeries.slices.template.strokeWidth = 2;
        pieSeries.slices.template.strokeOpacity = 1;
        pieSeries.alignLabels = true;


        // This creates initial animation
        pieSeries.hiddenState.properties.opacity = 1;
        pieSeries.hiddenState.properties.endAngle = -90;
        pieSeries.hiddenState.properties.startAngle = -90;

    }); // end am4core.ready()
</script>
